name: Build Using Ubuntu-installed libraries

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:

  build-deps:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        compiler: [ gnu, clang ]
    steps:

      - uses: actions/checkout@v3

      - name: Install System dependencies
        shell: bash -l {0}
        run: sudo apt update && sudo apt install -y libaec-dev zlib1g-dev automake autoconf libcurl4-openssl-dev libjpeg-dev wget curl bzip2 m4 flex bison cmake libzip-dev openmpi-bin libopenmpi-dev libnetcdf-dev libhdf5-dev libcgns-dev libmatio-dev libfmt-dev

      - name: See what installed
        shell: bash -l {0}
        run: |
          echo $HOME
          ls /usr/lib      
          ls /usr/lib/cmake
          find /usr/ -name \*.cmake -print

      - name: Run cmake
        shell: bash -l {0}
        run: |
          echo $HOME
          mkdir build
          cd build
          HDF5_DIR=/usr HDF5_PATH=/usr NETCDF_PATH=/usr MODERN=YES NUMPROCS=2 COMPILER=${{ matrix.compiler }} INSTALL_PATH=${HOME} bash ../cmake-config

      - name: Build 
        shell: bash -l {0}
        run: |
          cd build 
          make -j 4
        if: ${{ success() }}

      - name: Install
        shell: bash -l {0}
        run: |
          cd build 
          make -j 4 install
        if: ${{ success() }}

      - name: Run Tests
        shell: bash -l {0}
        run: |
          cd build
          ctest -j 4 --output-on-failure
        if: ${{ success() }}
